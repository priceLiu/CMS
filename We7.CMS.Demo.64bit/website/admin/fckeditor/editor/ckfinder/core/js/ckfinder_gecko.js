var cl={gn:{eh:{}}};var ct={Dir:CKFLang.Dir};var cD=false;var aQ={v:[],bz:function(C){var D=this.v.length;this.v[D]=C;return D},au:function(B){var C=this.v[B];this.v[B]=null;return C},cp:function(){var A=0;while(A<this.v.length){this.v[A++]=null}this.v.length=0}};var qE="\145";String.prototype.cg=function(B){return(this.indexOf(B)>-1)};String.prototype.qq=function(){var B=arguments;if(B.length==1&&B[0].pop){B=B[0]}for(var C=0;C<B.length;C++){if(this==B[C]){return true}}return false};String.prototype.hp=function(){var C=this.toUpperCase();var D=arguments;if(D.length==1&&D[0].pop){D=D[0]}for(var E=0;E<D.length;E++){if(C==D[E].toUpperCase()){return true}}return false};String.prototype.pe=function(E,F){var G=this;for(var D=0;D<E.length;D++){G=G.replace(E[D],F[D])}return G};String.prototype.oV=function(B){return(this.substr(0,B.length)==B)};String.prototype.eB=function(F,G){var H=this.length;var I=F.length;if(I>H){return false}if(G){var J=new RegExp(F+"$","i");return J.test(this)}else{return(I==0||this.substr(H-I,I)==F)}};String.prototype.dW=function(D,E){var C="";if(D>0){C=this.substring(0,D)}if(D+E<this.length){C+=this.substring(D+E,this.length)}return C};String.prototype.fO=function(){return this.replace(/(^[ \t\n\r]*)|([ \t\n\r]*$)/g,"")};String.prototype.qy=function(){return this.replace(/^[ \t\n\r]*/g,"")};String.prototype.qz=function(){return this.replace(/[ \t\n\r]*$/g,"")};String.prototype.hl=function(B){return this.replace(/\n/g,B)};String.prototype.hk=function(D,E,F){if(typeof E=="function"){return this.replace(D,function(){return E.apply(F||this,arguments)})}else{return this.replace(D,E)}};Array.prototype.Q=function(B){var C=this.length;this[C]=B;return C};Array.prototype.qc=function(B){for(var C=0;C<this.length;C++){if(this[C]==B){return C}}return -1};var fX="images/";var at="images/spacer.gif";var qD=1000;var qt=2000;var qK=4000;var gY=0;var gO=1;var gV=2;var s=navigator.userAgent.toLowerCase();var U={dF:
/*@cc_on!@*/
false,pm:
/*@cc_on!@*/
false && (parseFloat(s.match(/msie ([\d|\.]+)/)[1]) >= 7), dR: s.cg("gecko/"), eA: s.cg(" applewebkit/"), gu: !!window.opera, qx: s.cg("macintosh")
}; (function (C) { C.oB = (C.dR || C.eA || C.gu); if (C.dR) { var D = s.match(/gecko\/(\d+)/)[1]; C.hE = ((D < 20051111) || (/rv:1\.7/.test(s))); C.hj = /rv:1\.9/.test(s) } else { C.hE = false } })(U); var cH = cl.qn = {}; if (document.location.protocol == "file:") { cH.aD = decodeURIComponent(document.location.pathname.substr(1)); cH.aD = cH.aD.replace(/\\/gi, "/"); var ff = document.location.href.match(/^(file\:\/{2,3})/)[1]; if (U.gu) { ff += "localhost/" } cH.aD = ff + cH.aD.substring(0, cH.aD.lastIndexOf("/") + 1); cH.fQ = cH.aD } else { cH.aD = document.location.pathname.substring(0, document.location.pathname.lastIndexOf("/") + 1); cH.fQ = document.location.protocol + "//" + document.location.host + cH.aD } cH.oS = cH.aD.replace(/editor\/$/, ""); try { cH.gc = screen.width; cH.fD = screen.height } catch (e) { cH.gc = 800; cH.fD = 600 } cH.hK = function () { this.bL = {}; var G = window.parent.document.getElementById(cl.Name + "___Config"); if (!G) { return } var H = G.value.split("&"); for (var I = 0; I < H.length; I++) { if (H[I].length == 0) { continue } var F = H[I].split("="); var J = decodeURIComponent(F[0]); var K = decodeURIComponent(F[1]); if (J == "CustomConfigurationsPath") { cH[J] = K } else { if (K.toLowerCase() == "true") { this.bL[J] = true } else { if (K.toLowerCase() == "false") { this.bL[J] = false } else { if (K.length > 0 && !isNaN(K)) { this.bL[J] = parseInt(K, 10) } else { this.bL[J] = K } } } } } }; function fW() { var C = cH.bL; for (var D in C) { cH[D] = C[D] } } function gH() { var C = cH; if (C.gq) { try { if ((/fckdebug=true/i).test(window.top.location.search)) { C.kb = true } } catch (E) { } } if (!C.ge.eB("/")) { C.ge += "/" } if (typeof (C.cy) == "string") { C.cy = C.cy.split(",") } var D = C.bp; if (!D || D.length == 0) { C.bp = C.cy } else { if (typeof (D) == "string") { C.bp = [D] } } } cH.oI = {}; cH.fc = {}; cH.fc.cZ = []; cH.fc.qk = function (D, E, F) { cH.fc.cZ.Q([D, E, F]) }; cH.cX = {}; cH.cX.gB = (new Date()).valueOf(); cH.cX.nr = [/<!--[\s\S]*?-->/g, /<script[\s\S]*?<\/script>/gi, /<noscript[\s\S]*?<\/noscript>/gi, /<object[\s\S]+?<\/object>/gi]; cH.cX.qk = function (B) { this.nr.Q(B) }; cH.cX.cu = function (D) { var E = this.gB; function C(B) { var A = aQ.bz(B); return "<!--{" + E + A + "}-->" } for (var F = 0; F < this.nr.length; F++) { D = D.replace(this.nr[F], C) } return D }; cH.cX.cs = function (E, F) { function C(A, D, H) { var B = F ? aQ.au(H) : aQ.v[H]; return cH.cX.cs(B, F) } var G = new RegExp("(<|&lt;)!--\\{" + this.gB + "(\\d+)\\}--(>|&gt;)", "g"); return E.replace(G, C) }; cH.fZ = function () { var B = ""; if (this.fw && this.fw.length > 0) { B += ' id="' + this.fw + '"' } if (this.dE && this.dE.length > 0) { B += ' class="' + this.dE + '"' } return B }; cH.fR = function (B) { if (this.fw && this.fw.length > 0) { B.id = cH.fw } if (this.dE && this.dE.length > 0) { B.className += " " + cH.dE } }; var eD = {}; eD.eT = function () { if (!this.dr || this.dr.closed) { this.dr = window.open(cH.aD + "fckdebug.html", "FCKeditorDebug", "menubar=no,scrollbars=yes,resizable=yes,location=no,toolbar=no,width=600,height=500", true) } return this.dr }; eD.nQ = function (D, E, F) { if (!cH.kb) { return } try { this.eT().nQ(D, E) } catch (G) { } }; eD.fE = function (C, D) { if (!cH.kb) { return } try { this.eT().fE(C, D) } catch (E) { } }; var ig = { iy: function (E, F, G) { if (E == F) { return } var H; if (G) { while ((H = E.lastChild)) { F.insertBefore(E.removeChild(H), F.firstChild) } } else { while ((H = E.firstChild)) { F.appendChild(E.removeChild(H)) } } }, iB: function (D, E, F) { if (F) { E.insertBefore(ig.hV(D), E.firstChild) } else { E.appendChild(ig.hV(D)) } }, il: function (B) { this.ie(B); this.ih(B) }, ie: function (E) { var F; while ((F = E.firstChild)) { if (F.nodeType == 3) { var G = F.nodeValue.qy(); var H = F.nodeValue.length; if (G.length == 0) { E.removeChild(F); continue } else { if (G.length < H) { F.splitText(H - G.length); E.removeChild(E.firstChild) } } } break } }, ih: function (E) { var F; while ((F = E.lastChild)) { if (F.nodeType == 3) { var G = F.nodeValue.qz(); var H = F.nodeValue.length; if (G.length == 0) { F.parentNode.removeChild(F); continue } else { if (G.length < H) { F.splitText(G.length); E.lastChild.parentNode.removeChild(E.lastChild) } } } break } if (!U.dF && !U.gu) { F = E.lastChild; if (F && F.nodeType == 1 && F.nodeName.toLowerCase() == "br") { F.parentNode.removeChild(F) } } }, hV: function (D, E) { if (E) { var F; while ((F = D.firstChild)) { D.parentNode.insertBefore(D.removeChild(F), D) } } return D.parentNode.removeChild(D) }, iu: function (D, E) { if (typeof (E) == "string") { E = [E] } var F = D.firstChild; while (F) { if (F.nodeType == 1 && F.tagName.qq.apply(F.tagName, E)) { return F } F = F.nextSibling } return null }, iw: function (D, E) { if (typeof (E) == "string") { E = [E] } var F = D.lastChild; while (F) { if (F.nodeType == 1 && (!E || F.tagName.qq(E))) { return F } F = F.previousSibling } return null }, hG: function (E, F, G, H) { if (!E) { return null } if (G && E.nodeType == 1 && E.nodeName.hp(G)) { return null } if (E.previousSibling) { E = E.previousSibling } else { return this.hG(E.parentNode, F, G, H) } while (E) { if (E.nodeType == 1) { if (G && E.nodeName.hp(G)) { break } if (!H || !E.nodeName.hp(H)) { return E } } else { if (F && E.nodeType == 3 && E.nodeValue.qz().length > 0) { break } } if (E.lastChild) { E = E.lastChild } else { return this.hG(E, F, G, H) } } return null }, hP: function (F, G, H, I, J) { while ((F = this.bF(F, J))) { if (F.nodeType == 1) { if (H && F.nodeName.hp(H)) { break } if (I && F.nodeName.hp(I)) { return this.hP(F, G, H, I) } return F } else { if (G && F.nodeType == 3 && F.nodeValue.qz().length > 0) { break } } } return null }, bF: function (F, G, H, I) { if (!F) { return null } var J; if (!G && F.firstChild) { J = F.firstChild } else { if (I && F == I) { return null } J = F.nextSibling; if (!J && (!I || I != F.parentNode)) { return this.bF(F.parentNode, true, H, I) } } if (H && J && J.nodeType != H) { return this.bF(J, false, H, I) } return J }, hL: function (F, G, H, I) { if (!F) { return null } var J; if (!G && F.lastChild) { J = F.lastChild } else { if (I && F == I) { return null } J = F.previousSibling; if (!J && (!I || I != F.parentNode)) { return this.hL(F.parentNode, true, H, I) } } if (H && J && J.nodeType != H) { return this.hL(J, false, H, I) } return J }, hX: function (C, D) { return C.parentNode.insertBefore(D, C.nextSibling) }, hW: function (C) { var D = []; while (C) { D.unshift(C); C = C.parentNode } return D }, hT: function (G, H) { var I = this.hW(G); var J = this.hW(H); var K = []; for (var F = 0; F < I.length; F++) { if (I[F] == J[F]) { K.push(I[F]) } } return K }, ia: function (G, H, I) { var J = {}; if (!I.pop) { I = [I] } while (I.length > 0) { J[I.pop().toLowerCase()] = 1 } var K = this.hT(G, H); var L = null; while ((L = K.pop())) { if (J[L.nodeName.toLowerCase()]) { return L } } return null }, iA: function (D) { var E = D.parentNode ? D.parentNode.firstChild : null; var F = -1; while (E) { F++; if (E == D) { return F } E = E.nextSibling } return -1 }, hH: null, ii: function (D, E) { try { if (!D || !D.body) { return } } catch (G) { return } this.hO(D, E, true); try { if (D.body.lastChild && (D.body.lastChild.nodeType != 1 || D.body.lastChild.tagName.toLowerCase() == E.toLowerCase())) { return } } catch (G) { return } var F = D.createElement(E); if (U.dR && fe.hS[E]) { l.mL(F) } this.hH = F; if (D.body.childNodes.length == 1 && D.body.firstChild.nodeType == 1 && D.body.firstChild.tagName.toLowerCase() == "br" && (D.body.firstChild.getAttribute("_moz_dirty") != null || D.body.firstChild.getAttribute("type") == "_moz")) { D.body.replaceChild(F, D.body.firstChild) } else { D.body.appendChild(F) } }, hO: function (F, G, H) { var I = this.hH; if (!I) { return } try { if (I.parentNode != F.body || I.tagName.toLowerCase() != G || (I.childNodes.length > 1) || (I.firstChild && I.firstChild.nodeValue != "\xa0" && String(I.firstChild.tagName).toLowerCase() != "br")) { this.hH = null; return } } catch (E) { this.hH = null; return } if (!H) { if (I.parentNode.childNodes.length > 1) { I.parentNode.removeChild(I) } this.hH = null } }, ix: function (D, E) { if (D.hasAttribute) { return D.hasAttribute(E) } else { var F = D.attributes[E]; return (F != undefined && F.specified) } }, it: function (C) { var D = C.attributes; for (var E = 0; E < D.length; E++) { if (U.dF && D[E].nodeName == "class") { if (C.className.length > 0) { return true } } else { if (D[E].specified) { return true } } } return false }, im: function (C, D) { if (U.dF && D.toLowerCase() == "class") { D = "className" } return C.removeAttribute(D, 0) }, ik: function (D, E) { var F = E; if (typeof E == "string") { E = D.attributes[E] } else { F = E.nodeName } if (E && E.specified) { if (F == "style") { return D.style.cssText } else { if (F == "class" || F.indexOf("on") == 0) { return E.nodeValue } else { return D.getAttribute(F, 2) } } } return null }, cg: function (C, D) { if (C.contains && D.nodeType == 1) { return C.contains(D) } while ((D = D.parentNode)) { if (D == C) { return true } } return false }, iz: function (F, G, H) { var I = H || new gw(l.cO(F)); I.hs(F, 4); I.hm(G, 4); var J = I.iC(); I.iG(F.parentNode.removeChild(F)); J.hX(F); I.gL(!!H) }, ir: function (H, I) { var J = []; while (H && H != H.ownerDocument.documentElement) { var K = H.parentNode; var L = -1; for (var G = 0; G < K.childNodes.length; G++) { var M = K.childNodes[G]; if (I === true && M.nodeType == 3 && M.previousSibling && M.previousSibling.nodeType == 3) { continue } L++; if (K.childNodes[G] == H) { break } } J.unshift(L); H = H.parentNode } return J }, ij: function (P, H, I) { var J = P.documentElement; for (var N = 0; N < H.length; N++) { var K = H[N]; if (!I) { J = J.childNodes[K]; continue } var L = -1; for (var O = 0; O < J.childNodes.length; O++) { var M = J.childNodes[O]; if (I === true && M.nodeType == 3 && M.previousSibling && M.previousSibling.nodeType == 3) { continue } L++; if (L == K) { J = M; break } } } return J }, iv: function (B) { B = B.cloneNode(false); B.removeAttribute("id", false); return B }, hJ: function (C, D) { if (U.dF) { C.removeAttribute(D) } else { delete C[D] } }, hU: function (F, G, H, I) { var J = String(parseInt(Math.random() * 268435455, 10)); G.hR = J; G[H] = I; if (!F[J]) { F[J] = { "element": G, "markers": {}} } F[J]["markers"][H] = I }, hM: function (F, G, H) { var I = G.hR; if (!I) { return } this.hJ(G, "hR"); for (var E in F[I]["markers"]) { this.hJ(G, E) } if (H) { delete F[I] } }, ip: function (B) { for (var C in B) { this.hM(B, B[C]["element"], true) } }, hZ: function (R, I, J, K, L) { if (!R.nodeName.hp(["ul", "ol"])) { return [] } if (!K) { K = 0 } if (!J) { J = [] } for (var P = 0; P < R.childNodes.length; P++) { var M = R.childNodes[P]; if (!M.nodeName.hp("li")) { continue } var N = { "parent": R, "indent": K, "contents": [] }; if (!L) { N.ec = R.parentNode; if (N.ec && N.ec.nodeName.hp("li")) { N.ec = N.ec.parentNode } } else { N.ec = L } if (I) { this.hU(I, M, "_FCK_ListArray_Index", J.length) } J.push(N); for (var Q = 0; Q < M.childNodes.length; Q++) { var O = M.childNodes[Q]; if (O.nodeName.hp(["ul", "ol"])) { this.hZ(O, I, J, K + 1, N.ec) } else { N.contents.push(O) } } } return J }, hY: function (b, L, O) { if (O == undefined) { O = 0 } if (!b || b.length < O + 1) { return null } var P = b[O].parent.ownerDocument; var Q = P.createDocumentFragment(); var R = null; var S = O; var T = Math.max(b[O].indent, 0); var V = null; while (true) { var W = b[S]; if (W.indent == T) { if (!R || b[S].parent.nodeName != R.nodeName) { R = b[S].parent.cloneNode(false); Q.appendChild(R) } V = P.createElement("li"); R.appendChild(V); for (var Y = 0; Y < W.contents.length; Y++) { V.appendChild(W.contents[Y].cloneNode(true)) } S++ } else { if (W.indent == Math.max(T, 0) + 1) { var X = this.hY(b, null, S); V.appendChild(X.iV); S = X.iZ } else { if (W.indent == -1 && O == 0 && W.ec) { var V; if (W.ec.nodeName.hp(["ul", "ol"])) { V = P.createElement("li") } else { if (cH.gx.hp(["div", "p"]) && !W.ec.nodeName.hp("td")) { V = P.createElement(cH.gx) } else { V = P.createDocumentFragment() } } for (var Y = 0; Y < W.contents.length; Y++) { V.appendChild(W.contents[Y].cloneNode(true)) } if (V.nodeType == 11) { if (V.lastChild && V.lastChild.getAttribute && V.lastChild.getAttribute("type") == "_moz") { V.removeChild(V.lastChild) } V.appendChild(P.createElement("br")) } if (V.nodeName.hp(cH.gx) && V.firstChild) { this.il(V); if (fe.iD[V.firstChild.nodeName.toLowerCase()]) { var Z = P.createDocumentFragment(); while (V.firstChild) { Z.appendChild(V.removeChild(V.firstChild)) } V = Z } } if (U.oB && V.nodeName.hp(["div", "p"])) { l.mL(V) } Q.appendChild(V); R = null; S++ } else { return null } } } if (b.length <= S || Math.max(b[S].indent, 0) < T) { break } } if (L) { var a = Q.firstChild; while (a) { if (a.nodeType == 1) { this.hM(L, a) } a = this.bF(a) } } return { "iV": Q, "iZ": S} }, is: function (C, D) { C = C.nextSibling; while (C && !D && C.nodeType != 1 && (C.nodeType != 3 || C.nodeValue.length == 0)) { C = C.nextSibling } return C }, ic: function (C, D) { C = C.previousSibling; while (C && !D && C.nodeType != 1 && (C.nodeType != 3 || C.nodeValue.length == 0)) { C = C.previousSibling } return C }, hQ: function (E, F) { var G = E.firstChild; var H; while (G) { if (G.nodeType == 1) { if (H || !fe.iH[G.nodeName.toLowerCase()]) { return false } if (!F || F(G) === true) { H = G } } else { if (G.nodeType == 3 && G.nodeValue.length > 0) { return false } } G = G.nextSibling } return H ? this.hQ(H, F) : true }, cj: function (E, F) { var G = E.style; for (var H in F) { G[H] = F[H] } }, gF: function (D, C, E) { if (U.dF) { return C.currentStyle[E] } else { return D.getComputedStyle(C, "")[E] } }, fm: function (D, C) { var E = C; while (E != E.ownerDocument.documentElement) { if (this.gF(D, E, "position") != "static") { return E } E = E.parentNode } return null }, iq: function (G, H) { var I = l.cO(G); var J = l.eL(I).Height; var K = J * -1; if (H === false) { K += G.offsetHeight; K += parseInt(this.gF(I, G, "marginBottom") || 0, 10) } K += G.offsetTop; while ((G = G.offsetParent)) { K += G.offsetTop || 0 } var L = l.ek(I).Y; if (K > 0 && K > L) { I.scrollTo(0, K) } } }; var l = {}; l.ft = function (C) { var D = C.createElement("br"); D.setAttribute("type", "_moz"); return D }; l.ap = function (E, F) { if (typeof (F) == "string") { return this.cB(E, F) } else { var G = []; for (var D = 0; D < F.length; D++) { G.push(this.cB(E, F[D])) } return G } }; l.gh = function (C, D) { this.fk(C, D) }; l.T = function (B) { return B.ownerDocument || B.document }; l.cO = function (B) { return this.cA(this.T(B)) }; l.cA = function (B) { if (U.eA && !B.parentWindow) { this.bi(window.top) } return B.parentWindow || B.defaultView }; l.bi = function (B) { if (B.document) { B.document.parentWindow = B } for (var C = 0; C < B.frames.length; C++) { l.bi(B.frames[C]) } }; l.aB = function (B) { if (!B) { return "" } B = B.replace(/&/g, "&amp;"); B = B.replace(/</g, "&lt;"); B = B.replace(/>/g, "&gt;"); return B }; l.pi = function (B) { if (!B) { return "" } B = B.replace(/&gt;/g, ">"); B = B.replace(/&lt;/g, "<"); B = B.replace(/&amp;/g, "&"); return B }; l.eV = function (V, J, K, L, M) { var N = 0; var O = "<p>"; var Q = "</p>"; var R = "<br />"; if (K) { O = "<li>"; Q = "</li>"; N = 1 } while (L && L != V.cl.fI.body) { if (L.tagName.toLowerCase() == "p") { N = 1; break } L = L.parentNode } for (var T = 0; T < J.length; T++) { var P = J.charAt(T); if (P == "\r") { continue } if (P != "\n") { M.push(P); continue } var S = J.charAt(T + 1); if (S == "\r") { T++; S = J.charAt(T + 1) } if (S == "\n") { T++; if (N) { M.push(Q) } M.push(O); N = 1 } else { M.push(R) } } }; l.ba = function (R, I, J, K, L) { var M = 0; var N = "<div>"; var P = "</div>"; if (J) { N = "<li>"; P = "</li>"; M = 1 } while (K && K != R.cl.fI.body) { if (K.tagName.toLowerCase() == "div") { M = 1; break } K = K.parentNode } for (var Q = 0; Q < I.length; Q++) { var O = I.charAt(Q); if (O == "\r") { continue } if (O != "\n") { L.push(O); continue } if (M) { if (L[L.length - 1] == N) { L.push("&nbsp;") } L.push(P) } L.push(N); M = 1 } if (M) { L.push(P) } }; l.eO = function (R, I, J, K, L) { var M = 0; var N = "<br />"; var P = ""; if (J) { N = "<li>"; P = "</li>"; M = 1 } for (var Q = 0; Q < I.length; Q++) { var O = I.charAt(Q); if (O == "\r") { continue } if (O != "\n") { L.push(O); continue } if (M && P.length) { L.push(P) } L.push(N); M = 1 } }; l.gl = function (P, I, J) { var K = I.gx.toLowerCase(); var L = []; var M = 0; var N = new P.gw(P.cl.gs); N.gp(); var O = N.gA.startContainer; while (O && O.nodeType != 1) { O = O.parentNode } if (O && O.tagName.toLowerCase() == "li") { M = 1 } if (K == "p") { this.eV(P, J, M, O, L) } else { if (K == "div") { this.ba(P, J, M, O, L) } else { if (K == "br") { this.eO(P, J, M, O, L) } } } return L.join("") }; l.jQ = function (E, F, G) { var H = l.T(E).createElement("OPTION"); H.text = F; H.value = G; E.options.add(H); return H }; l.aj = function (E, F, G, H) { if (E) { this.gI(E, 0, F, G, H) } }; l.gI = function (F, G, H, I, J) { return (J || window).setTimeout(function () { if (I) { F.apply(H, [].concat(I)) } else { F.apply(H) } }, G) }; l.dD = function (F, G, H, I, J) { return (J || window).setInterval(function () { F.apply(H, I || []) }, G) }; l.gf = function (B) { return B.eB("%") ? B : parseInt(B, 10) }; l.gb = function (B) { return B.eB("%") ? B : (B + "px") }; l.hz = function (D, E) { var G = D; var F = "," + E.toUpperCase() + ","; while (G) { if (F.indexOf("," + G.nodeName.toUpperCase() + ",") != -1) { return G } G = G.parentNode } return null }; l.an = function (C, D) { var E = function () { var B = []; for (var A = 0; A < arguments.length; A++) { B.push(arguments[A]) } C.apply(this, B.concat(D)) }; return E }; l.fF = function (B) { return ("CSS1Compat" == (B.compatMode || "CSS1Compat")) }; l.jK = function (F, G, H) { G = G || 0; H = H || F.length; var I = []; for (var E = G; E < G + H && E < F.length; E++) { I.push(F[E]) } return I }; l.oC = function (C) { var D = function () { }; D.prototype = C; return new D }; l.mL = function (D) { if (!D) { return } var E = this.gk(D.getElementsByTagName("br")); if (!E || (E.getAttribute("type", 2) != "_moz" && E.getAttribute("_moz_dirty") == null)) { var F = this.T(D); if (U.gu) { D.appendChild(F.createTextNode("")) } else { D.appendChild(this.ft(F)) } } }; l.gk = function (B) { if (B.length > 0) { return B[B.length - 1] } return null }; l.bR = function (L, M) { var J = 0; var K = 0; var F = M; var G = null; var H = l.cO(F); while (F && !(H == L && (F == L.document.body || F == L.document.documentElement))) { J += F.offsetLeft - F.scrollLeft; K += F.offsetTop - F.scrollTop; if (!U.gu) { var I = G; while (I && I != F) { J -= I.scrollLeft; K -= I.scrollTop; I = I.parentNode } } G = F; if (F.offsetParent) { F = F.offsetParent } else { if (H != L) { F = H.frameElement; G = null; if (F) { H = l.cO(F) } } else { F = null } } } if (ig.gF(L, L.document.body, "position") != "static" || (U.dF && ig.fm(L, M) == null)) { J += L.document.body.offsetLeft; K += L.document.body.offsetTop } return { "x": J, "y": K} }; l.gM = function (E, D) { var F = this.bR(E, D); var G = l.ek(E); F.x -= G.X; F.y -= G.Y; return F }; l.dN = function (G) { if (!G || G.nodeType != 1 || G.tagName.toLowerCase() != "form") { return [] } var H = []; var I = ["style", "className"]; for (var F = 0; F < I.length; F++) { var J = I[F]; if (G.elements.namedItem(J)) { var K = G.elements.namedItem(J); H.push([K, K.nextSibling]); G.removeChild(K) } } return H }; l.dV = function (F, G) { if (!F || F.nodeType != 1 || F.tagName.toLowerCase() != "form") { return } if (G.length > 0) { for (var H = G.length - 1; H >= 0; H--) { var E = G[H][0]; var I = G[H][1]; if (I) { F.insertBefore(E, I) } else { F.appendChild(E) } } } }; l.fU = function (D, E) { if (D.firstChild) { return D.firstChild } else { if (D.nextSibling) { return D.nextSibling } else { var F = D.parentNode; while (F) { if (F == E) { return null } if (F.nextSibling) { return F.nextSibling } else { F = F.parentNode } } } } return null }; l.gW = function (D, E, F) { fG = this.fU(D, E); if (F && fG && F(fG)) { return null } while (fG && fG.nodeType != 3) { fG = this.fU(fG, E); if (F && fG && F(fG)) { return null } } return fG }; l.hu = function () { var D = arguments; var C = D[0]; for (var F = 1; F < D.length; F++) { var E = D[F]; for (var G in E) { C[G] = E[G] } } return C }; l.ho = function (B) { return (B instanceof Array) }; l.gJ = function (E, F) { var G = 0; for (var D in E) { G++ } return E[F || "length"] = G }; l.gR = function (C) { var D = document.createElement("span"); D.style.cssText = C; return D.style.cssText }; l.ht = function (C, D) { return function () { C[D].apply(C, arguments) } }; l.dx = function (A) { if (A) { A.preventDefault() } }; l.cS = function (B) { if (U.dR) { B.style.MozUserSelect = "none" } else { B.style.qw = "none" } }; l.cB = function (C, D) { var E = C.createElement("LINK"); E.rel = "stylesheet"; E.type = "text/css"; E.href = D; C.getElementsByTagName("HEAD")[0].appendChild(E); return E }; l.fk = function (C, D) { var E = C.createElement("STYLE"); E.appendChild(C.createTextNode(D)); C.getElementsByTagName("HEAD")[0].appendChild(E); return E }; l.gg = function (B) { for (var C = 0; C < B.attributes.length; C++) { B.removeAttribute(B.attributes[C].name, 0) } }; l.io = function (D) { var E = []; var F = function (A) { for (var B = 0; B < A.childNodes.length; B++) { var C = A.childNodes[B].id; if (C && C.length > 0) { E[E.length] = C } F(A.childNodes[B]) } }; F(D); return E }; l.ll = function (D) { var B = D.ownerDocument.createDocumentFragment(); for (var C = 0; C < D.childNodes.length; C++) { B.appendChild(D.childNodes[C].cloneNode(true)) } D.parentNode.replaceChild(B, D) }; l.jZ = function (B) { switch (B) { case "XmlHttp": return new XMLHttpRequest(); case "DOMDocument": return document.implementation.createDocument("", "", null) } return null }; l.ek = function (B) { return { X: B.pageXOffset, Y: B.pageYOffset} }; l.jH = function (D, E, F) { D.addEventListener(E, F, false) }; l.hn = function (D, E, F) { D.removeEventListener(E, F, false) }; l.ad = function (E, F, G, H) { E.addEventListener(F, function (A) { G.apply(E, [A].concat(H || [])) }, false) }; l.eL = function (B) { return { Width: B.innerWidth, Height: B.innerHeight} }; l.ph = function (E) { var F = l.dN(E); var G = {}; if (E.className.length > 0) { G.pk = E.className; E.className = "" } var H = E.getAttribute("style"); if (H && H.length > 0) { G.Inline = H; E.setAttribute("style", "", 0) } l.dV(E, F); return G }; l.mS = function (D, E) { var F = l.dN(D); D.className = E.pk || ""; if (E.Inline) { D.setAttribute("style", E.Inline, 0) } else { D.removeAttribute("style", 0) } l.dV(D, F) }; l.gd = function (B) { B.$ = function (A) { return this.document.getElementById(A) } }; l.fq = function (C, D) { return C.appendChild(C.ownerDocument.createElement(D)) }; l.fn = function (O, H) { var N = { X: 0, Y: 0 }; var I = H || window; var J = l.cO(O); var K = null; while (O) { var L = J.getComputedStyle(O, "").position; if (L && L != "static" && O.style.zIndex != cH.eU) { break } N.X += O.offsetLeft - O.scrollLeft; N.Y += O.offsetTop - O.scrollTop; if (!U.gu) { var M = K; while (M && M != O) { N.X -= M.scrollLeft; N.Y -= M.scrollTop; M = M.parentNode } } K = O; if (O.offsetParent) { O = O.offsetParent } else { if (J != I) { O = J.frameElement; K = null; if (O) { J = l.cO(O) } } else { N.X += O.scrollLeft; N.Y += O.scrollTop; break } } } return N }; var fg = function (C) { var D = C ? typeof (C) : "undefined"; switch (D) { case "number": this.aI = cH.SkinPath + "fck_strip.gif"; this.Size = 16; this.Position = C; break; case "undefined": this.aI = at; break; case "string": this.aI = C; break; default: this.aI = C[0]; this.Size = C[1]; this.Position = C[2] } }; fg.prototype.bj = function (D) { var E, G; if (this.Position) { var F = "-" + ((this.Position - 1) * this.Size) + "px"; if (U.dF) { E = D.createElement("DIV"); G = E.appendChild(D.createElement("IMG")); G.src = this.aI; G.style.top = F } else { E = D.createElement("IMG"); E.src = at; E.style.backgroundPosition = "0px " + F; E.style.backgroundImage = 'url("' + this.aI + '")' } } else { if (U.dF) { E = D.createElement("DIV"); G = E.appendChild(D.createElement("IMG")); G.src = this.aI ? this.aI : at } else { E = D.createElement("IMG"); E.src = this.aI ? this.aI : at } } E.className = "TB_Button_Image"; return E }; var aC = function (G, H, I, J, K, L) { this.Name = G; this.eS = H || G; this.lz = I || this.eS; this.Style = K || 0; this.hb = L || 0; this.Icon = new fg(J); if (cl.af) { cl.af.Q(this, aP) } }; aC.prototype.aH = function (C) { var D = C.createElement("IMG"); D.className = "TB_Button_Padding"; D.src = at; return D }; aC.prototype.aO = function (I) { var J = l.T(I); var K = this.O = J.createElement("DIV"); K.title = this.lz; if (U.dR) { K.onmousedown = l.dx } l.ad(K, "mouseover", cJ, this); l.ad(K, "mouseout", cL, this); l.ad(K, "click", cU, this); this.dy(this.hb, true); if (this.Style == 0 && !this.ib) { K.appendChild(this.Icon.bj(J)) } else { var L = K.appendChild(J.createElement("TABLE")); L.cellPadding = 0; L.cellSpacing = 0; var M = L.insertRow(-1); var N = M.insertCell(-1); if (this.Style == 0 || this.Style == 2) { N.appendChild(this.Icon.bj(J)) } else { N.appendChild(this.aH(J)) } if (this.Style == 1 || this.Style == 2) { N = M.insertCell(-1); N.className = "TB_Button_Text"; N.noWrap = true; N.appendChild(J.createTextNode(this.eS)) } if (this.ib) { if (this.Style != 0) { M.insertCell(-1).appendChild(this.aH(J)) } N = M.insertCell(-1); var H = N.appendChild(J.createElement("IMG")); H.src = cH.SkinPath + "images/toolbar.buttonarrow.gif"; H.width = 5; H.height = 3 } N = M.insertCell(-1); N.appendChild(this.aH(J)) } I.appendChild(K) }; aC.prototype.dy = function (C, D) { if (!D && this.hb == C) { return } var E = this.O; if (!E) { return } switch (parseInt(C, 10)) { case 0: E.className = "TB_Button_Off"; break; case 1: E.className = "TB_Button_On"; break; case -1: E.className = "TB_Button_Disabled"; break } this.hb = C }; function cJ(C, D) { if (D.hb == 0) { this.className = "TB_Button_Off_Over" } else { if (D.hb == 1) { this.className = "TB_Button_On_Over" } } } function cL(C, D) { if (D.hb == 0) { this.className = "TB_Button_Off" } else { if (D.hb == 1) { this.className = "TB_Button_On" } } } function cU(C, D) { if (D.OnClick && D.hb != -1) { D.OnClick(D) } } function aP() { this.O = null } var bV = function () { this.cZ = [] }; bV.prototype.Q = function (B) { return this.cZ[this.cZ.length] = B }; bV.prototype.dj = function (I, J, K, L, M, N) { if (typeof (L) == "number") { L = [this.iE, this.ke, L] } var H = new aC(I, J, K, L, M, N); H.ga = this; H.OnClick = dk; return this.Q(H) }; function dk(C) { var D = C.ga; if (D.bo) { D.bo(D, C) } } bV.prototype.as = function () { this.Q(new ce()) }; bV.prototype.aO = function (G) { var H = l.T(G); var J = H.createElement("table"); J.className = "TB_Toolbar"; J.style.styleFloat = J.style.cssFloat = (ct.Dir == "ltr" ? "left" : "right"); J.dir = ct.Dir; J.cellPadding = 0; J.cellSpacing = 0; var I = J.insertRow(-1); var F; if (!this.pp) { F = I.insertCell(-1); F.appendChild(H.createElement("div")).className = "TB_Start" } for (var E = 0; E < this.cZ.length; E++) { this.cZ[E].aO(I.insertCell(-1)) } if (!this.pY) { F = I.insertCell(-1); F.appendChild(H.createElement("div")).className = "TB_End" } G.appendChild(J) }; var ce = function () { }; ce.prototype.aO = function (B) { l.fq(B, "div").className = "TB_Separator" }; var aA = function (I) { this.fz = (ct.Dir == "rtl"); this.bq = false; this.cP = 0; this.al = I || window; var J; if (U.dF) { this.aF = this.al.createPopup(); J = this.Document = this.aF.document; cl.af.Q(this, eC) } else { var K = this._IFrame = this.al.document.createElement("iframe"); K.src = "javascript:void(0)"; K.allowTransparency = true; K.frameBorder = "0"; K.scrolling = "no"; K.width = K.height = 0; ig.cj(K, { position: "absolute", zIndex: cH.eU }); if (this.al == window.parent && window.frameElement) { var L = null; if (U.dR && cl && cl.fI) { L = [cl.fI.body.scrollLeft, cl.fI.body.scrollTop] } window.frameElement.parentNode.insertBefore(K, window.frameElement); if (L) { var M = function () { cl.fI.body.scrollLeft = L[0]; cl.fI.body.scrollTop = L[1] }; setTimeout(M, 500) } } else { this.al.document.body.appendChild(K) } var N = K.contentWindow; J = this.Document = N.document; var H = ""; if (U.eA) { H = '<base href="' + window.document.location + '">' } J.open(); J.write("<html><head>" + H + '</head><body style="margin:0px;padding:0px;"></body></html>'); J.close(); l.ad(N, "focus", dc, this); l.ad(N, "blur", dw, this) } J.dir = ct.Dir; l.jH(J, "contextmenu", l.dx); this.ah = J.body.appendChild(J.createElement("DIV")); this.ah.style.cssFloat = this.fz ? "right" : "left" }; aA.prototype.ap = function (B) { l.ap(this.Document, B) }; aA.prototype.qa = function (B, C, D) { if (this.aF) { this.aF.show(B, C, 0, 0, D) } }; aA.prototype.dM = function (V, W, g, O, P) { var Q; var R = this.ah; if (this.aF) { this.aF.show(V, W, 0, 0, g); ig.cj(R, { B: O ? O + "px" : "", C: P ? P + "px" : "" }); Q = R.offsetWidth; if (this.fz) { if (this.bq) { V = V - Q + 1 } else { if (g) { V = (V * -1) + g.offsetWidth - Q } } } this.aF.show(V, W, Q, R.offsetHeight, g); if (this.fB) { if (this.fT) { cT.call(this, true) } this.fT = l.dD(cT, 100, this) } } else { if (typeof (cl.gn.eh.gy) != "undefined") { cl.gn.eh.gy.jC() } if (this.cn) { this.cn.jC(); dw(null, this.cn) } if (aA.fN) { aA.fN.bK() } ig.cj(R, { B: O ? O + "px" : "", C: P ? P + "px" : "" }); Q = R.offsetWidth; if (!O) { this._IFrame.width = 1 } if (!P) { this._IFrame.height = 1 } Q = R.offsetWidth || R.firstChild.offsetWidth; var S = l.bR(this.al, g.nodeType == 9 ? (l.fF(g) ? g.documentElement : g.body) : g); var T = ig.fm(l.cO(this._IFrame), this._IFrame.parentNode); if (T) { var X = l.bR(l.cO(T), T); S.x -= X.x; S.y -= X.y } if (this.fz && !this.bq) { V = (V * -1) } V += S.x; W += S.y; if (this.fz) { if (this.bq) { V = V - Q + 1 } else { if (g) { V = V + g.offsetWidth - Q } } } else { var Y = l.eL(this.al); var Z = l.ek(this.al); var a = Y.Height + Z.Y; var b = Y.Width + Z.X; if ((V + Q) > b) { V -= V + Q - b } if ((W + R.offsetHeight) > a) { W -= W + R.offsetHeight - a } } if (V < 0) { V = 0 } ig.cj(this._IFrame, { left: V + "px", top: W + "px" }); var c = Q; var f = R.offsetHeight; this._IFrame.width = c; this._IFrame.height = f; this._IFrame.contentWindow.focus(); aA.fN = this } this.ee = true; l.aj(this.qj, this) }; aA.prototype.bK = function (B) { if (this.aF) { this.aF.hide() } else { if (!this.ee || this.cP > 0) { return } if (typeof (bU) != "undefined") { bU.hN() } this._IFrame.width = this._IFrame.height = 0; this.ee = false; if (this.cn) { this.cn.hN() } if (!B) { l.aj(this.fB, this) } } }; aA.prototype.dO = function () { if (this.aF) { return this.aF.isOpen } else { return this.ee } }; aA.prototype.eG = function () { var C = this.aF ? l.cA(this.Document) : this.al; var D = new aA(C); D.cn = this; return D }; aA.prototype.jC = function () { this.cP++ }; aA.prototype.hN = function () { if (--this.cP == 0 && !this.fL) { this.bK() } }; function dc(C, B) { B.fL = true } function dw(C, B) { B.fL = false; if (B.cP == 0) { l.aj(B.bK, B) } } function cT(B) { if (B || !this.aF.isOpen) { window.clearInterval(this.fT); this.fT = null; l.aj(this.fB, this) } } function eC() { this.aF = null; this.al = null; this.Document = null; this.ah = null } var aT = function (F, G, H, I, J) { this.Name = G; this.eS = H || G; this.eY = J; this.Icon = new fg(I); this.bC = new av(); this.bC.dX = F; this.bC.OnClick = l.an(cr, this); if (cl.af) { cl.af.Q(this, dU) } }; aT.prototype.Q = function (E, F, G, H) { this.bh = true; return this.bC.Q(E, F, G, H) }; aT.prototype.as = function () { this.bC.as() }; aT.prototype.aO = function (G) { var H = this.bh; var I = l.T(G); var F = this.O = G.insertRow(-1); F.className = this.eY ? "MN_Item_Disabled" : "MN_Item"; if (!this.eY) { l.ad(F, "mouseover", da, [this]); l.ad(F, "click", dT, [this]); if (!H) { l.ad(F, "mouseout", ds, [this]) } } var J = F.insertCell(-1); J.className = "MN_Icon"; J.appendChild(this.Icon.bj(I)); J = F.insertCell(-1); J.className = "MN_Label"; J.noWrap = true; J.appendChild(I.createTextNode(this.eS)); J = F.insertCell(-1); if (H) { J.className = "MN_Arrow"; var K = J.appendChild(I.createElement("IMG")); K.src = fX + "arrow_" + ct.Dir + ".gif"; K.width = 4; K.height = 7; this.bC.aO(); this.bC.df.fB = l.an(cz, this) } }; aT.prototype.fS = function () { this.O.className = "MN_Item_Over"; if (this.bh) { this.bC.dM(this.O.offsetWidth + 2, -2, this.O) } l.aj(this.gX, this) }; aT.prototype.cE = function () { this.O.className = "MN_Item"; if (this.bh) { this.bC.bK() } }; function cr(C, D) { l.aj(D.OnClick, D, [C]) } function cz(B) { B.cE() } function dT(C, D) { if (D.bh) { D.fS() } else { D.cE(); l.aj(D.OnClick, D, [D]) } } function da(C, D) { D.fS() } function ds(C, D) { D.cE() } function dU() { this.O = null } var ak = function () { this.dC = [] }; ak.prototype.Count = function () { return this.dC.length }; ak.prototype.Q = function (F, G, H, I) { var J = new aT(this, F, G, H, I); J.OnClick = l.an(cI, this); J.gX = l.an(ci, this); this.dC.push(J); return J }; ak.prototype.as = function () { this.dC.push(new cW()) }; ak.prototype.bg = function () { this.dC = []; var B = this.co; if (B) { while (B.rows.length > 0) { B.deleteRow(0) } } }; ak.prototype.aO = function (G) { if (!this.co) { if (cl.af) { cl.af.Q(this, dL) } this.al = l.cO(G); var H = l.T(G); var I = G.appendChild(H.createElement("table")); I.cellPadding = 0; I.cellSpacing = 0; l.cS(I); var J = I.insertRow(-1).insertCell(-1); J.className = "MN_Menu"; var K = this.co = J.appendChild(H.createElement("table")); K.cellPadding = 0; K.cellSpacing = 0 } for (var F = 0; F < this.dC.length; F++) { this.dC[F].aO(this.co) } }; function cI(C, D) { if (D.bK) { D.bK() } l.aj(D.OnClick, D, [C]) } function ci(C) { var D = C.gj; if (D && D != this) { if (!U.dF && D.bh && !this.bh) { C.al.focus(); C.df.fL = true } D.cE() } C.gj = this } function dL() { this.al = null; this.co = null } var cW = function () { }; cW.prototype.aO = function (E) { var F = l.T(E); var D = E.insertRow(-1); var G = D.insertCell(-1); G.className = "MN_Separator MN_Icon"; G = D.insertCell(-1); G.className = "MN_Separator"; G.appendChild(F.createElement("DIV")).className = "MN_Separator_Line"; G = D.insertCell(-1); G.className = "MN_Separator"; G.appendChild(F.createElement("DIV")).className = "MN_Separator_Line" }; var av = function () { ak.call(this) }; av.prototype = new ak(); av.prototype.aO = function () { var B = this.df = (this.dX && this.dX.df ? this.dX.df.eG() : new aA()); B.ap(cH.SkinPath + "fck_editor.css"); ak.prototype.aO.call(this, B.ah) }; av.prototype.dM = function (B, C, D) { if (!this.df.dO()) { this.df.dM(B, C, D) } }; av.prototype.bK = function () { if (this.df.dO()) { this.df.bK() } }; var aq = function (E, F) { this.er = false; var G = this.eg = new aA(E); G.ap(cH.SkinPath + "fck_editor.css"); G.bq = true; if (U.dR) { G.Document.addEventListener("draggesture", function (A) { A.preventDefault(); return false }, true) } var H = this.bZ = new ak(); H.df = G; H.OnClick = l.an(bt, this); this.dB = true }; aq.prototype.cf = function (B) { if (!U.dF) { this.cv = B.document; if (U.gu && !("oncontextmenu" in document.createElement("foo"))) { this.cv.addEventListener("mousedown", bT, false); this.cv.addEventListener("mouseup", ca, false) } this.cv.addEventListener("contextmenu", aX, false) } }; aq.prototype.Q = function (F, G, H, I) { var J = this.bZ.Q(F, G, H, I); this.dB = true; return J }; aq.prototype.as = function () { this.bZ.as(); this.dB = true }; aq.prototype.bg = function () { this.bZ.bg(); this.dB = true }; aq.prototype.dg = function (B) { if (U.dF) { l.ad(B, "contextmenu", ae, this) } else { B.bS = this } }; function aX(C) { var B = C.target; while (B) { if (B.bS) { if (B.bS.er && (C.ctrlKey || C.metaKey)) { return true } l.dx(C); ae(C, B.bS, B); return false } B = B.parentNode } return true } var bc; function bT(I) { if (!I || I.button != 2) { return false } var F = I.target; while (F) { if (F.bS) { if (F.bS.er && (I.ctrlKey || I.metaKey)) { return true } var G = bc; if (!G) { var H = I.target.ownerDocument; G = bc = H.createElement("input"); G.type = "button"; var E = H.createElement("p"); H.body.appendChild(E); E.appendChild(G) } G.style.cssText = "position:absolute;top:" + (I.clientY - 2) + "px;left:" + (I.clientX - 2) + "px;width:5px;height:5px;opacity:0.01" } F = F.parentNode } return false } function ca(E) { var C = bc; if (C) { var D = C.parentNode; D.parentNode.removeChild(D); bc = undefined; if (E && E.button == 2) { aX(E); return false } } } function ae(G, H, I) { if (H.er && (G.ctrlKey || G.metaKey)) { return true } var J = I || this; if (H.cN) { H.cN.call(H, J) } if (H.bZ.Count() == 0) { return false } if (H.dB) { H.bZ.aO(H.eg.ah); H.dB = false } l.cS(H.eg.Document.body); var E = 0; var F = 0; if (U.dF) { E = G.screenX; F = G.screenY } else { if (U.eA) { E = G.clientX; F = G.clientY } else { E = G.pageX; F = G.pageY } } H.eg.dM(E, F, G.currentTarget || null); return false } function bt(C, D) { D.eg.bK(); l.aj(D.bo, D, C) } cH.SkinPath = CKFConfig.SkinPath; at = CKF_CORE_PATH + "images/spacer.gif"; var bJ; if (U.dF) { bJ = "javascript:''" } else { if (U.gu) { bJ = "" } else { bJ = "javascript:void(0)" } } var qC = "\x6C\157"; var qF = "\150\x6F"; var dK = ""; for (var code = 49; code < 58; code++) { dK += String.fromCharCode(code) } for (code = 65; code < 91; code++) { if (code == 73 || code == 79) { continue } dK += String.fromCharCode(code) } var en = window[qE + "\166\x61\x6C"]; l.gd(window); String.prototype.fO = function () { return this.replace(/(^\s*)|(\s*$)/g, "") }; String.prototype.jp = function (A) { return this.length && A ? (this.split(A)).length - 1 : 0 }; var cx = function (B) { this.fJ = new Array(B || "") }; cx.prototype = { eK: function (B) { if (B) { this.fJ.push(B) } }, fP: function () { return this.fJ.join("") } }; CKFLang.eu = function (M, F, G, H) { var K = M.getElementsByTagName(F); var I, L; for (var J = 0; J < K.length; J++) { if ((I = K[J].getAttribute("ckf:lang"))) { if ((L = CKFLang[I])) { if (H) { L = l.aB(L) } K[J][G] = L } } } }; CKFLang.gK = function (B) { this.eu(B, "INPUT", "value"); this.eu(B, "SPAN", "innerHTML"); this.eu(B, "LABEL", "innerHTML"); this.eu(B, "OPTION", "innerHTML", true); this.eu(B, "LEGEND", "innerHTML") }; var aR = { cw: /[^\.]+$/, hF: /^(jpg|gif|png|bmp|jpeg)$/i, jz: /^(ai|avi|bmp|cs|dll|doc|exe|fla|gif|jpg|js|mdb|mp3|pdf|ppt|rdp|swf|swt|txt|vsd|xls|xml|zip)$/i, fd: /[\\\/:\*\?"<>\|]/ }; var ao = { es: function (E, F) { var G = new RegExp("(?:[?&]|&amp;)" + E + "=([^&]+)", "i"); var H = (F || window).location.search.match(G); return (H && H.length > 1) ? H[1] : "" }, aV: function (E, F, G) { var H = function () { if (G) { G() } }; if (E.length == 0) { be.ea(F ? CKFLang.ErrorMsg.FolderEmpty : CKFLang.ErrorMsg.FileEmpty, H); return false } if (aR.fd.test(E)) { be.ea(F ? CKFLang.ErrorMsg.FolderInvChar : CKFLang.ErrorMsg.FileInvChar, H); return false } return true }, ew: function () { try { return new XMLHttpRequest() } catch (A) { } try { return new ActiveXObject("MsXml2.XmlHttp") } catch (A) { } try { return new ActiveXObject("Microsoft.XmlHttp") } catch (A) { } }, aB: function (B) { if (typeof (B) != "string") { B = B.toString() } B = B.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;"); return B }, FormatDate: (function () { var B = CKFLang.DateTime.replace(/dd|mm|yyyy|hh|HH|MM|aa|d|m|yy|h|H|M|a/g, function (A) { var C; switch (A) { case "d": C = "day.replace(/^0/,'')"; break; case "dd": C = "day"; break; case "m": C = "month.replace(/^0/,'')"; break; case "mm": C = "month"; break; case "yy": C = "year.substr(2)"; break; case "yyyy": C = "year"; break; case "H": C = "hour.replace(/^0/,'')"; break; case "HH": C = "hour"; break; case "h": C = "( hour < 12 ? hour : ( ( hour - 12 ) + 100 ).toString().substr( 1 ) ).replace(/^0/,'')"; break; case "hh": C = "( hour < 12 ? hour : ( ( hour - 12 ) + 100 ).toString().substr( 1 ) )"; break; case "M": C = "minute.replace(/^0/,'')"; break; case "MM": C = "minute"; break; case "a": C = "CKFLang.DateAmPm[ hour < 12 ? 0 : 1 ].charAt(0)"; break; case "aa": C = "CKFLang.DateAmPm[ hour < 12 ? 0 : 1 ]"; break; default: C = "'" + A + "'" } return "'," + C + ",'" }); B = "'" + B + "'"; B = B.replace(/('',)|,''$/g, ""); return new Function("day", "month", "year", "hour", "minute", "return [" + B + "].join('');") })() }; var eN = { le: function (D, E, F) { document.cookie = D + "=" + E + (!F ? "; expires=Thu, 6 Oct 2016 01:00:00 UTC; path=/" : "") }, qe: function (C) { var D = document.cookie.match(new RegExp("(^|\\s|;)" + C + "=([^;]*)")); return (D && D.length > 0) ? D[2] : "" } }; var hI = function () { }; hI.prototype = { gD: function (F, G) { var H = this; var I = (typeof (G) == "function"); var J = ao.ew(); J.open("GET", F, I); if (I) { J.onreadystatechange = function () { if (J.readyState == 4) { H.DOMDocument = J.responseXML; if ((J.status == 200 || J.status == 304) && J.responseXML != null && J.responseXML.firstChild != null) { G(H) } else { if (window.confirm("XML request error: " + J.statusText + " (" + J.status + ")\r\nDo you want to see more info?")) { alert('URL requested: "' + F + '"\r\nServer response:\r\nStatus: ' + J.status + "\r\nResponse text:\r\n" + J.responseText) } } } } } J.send(null); if (!I) { if ((J.status == 200 || J.status == 304) && J.responseXML != null && J.responseXML.firstChild != null) { this.DOMDocument = J.responseXML } else { if (window.confirm("XML request error: " + J.statusText + " (" + J.status + ")\r\nDo you want to see more info?")) { alert('URL requested: "' + F + '"\r\nServer response:\r\nStatus: ' + J.status + "\r\nResponse text:\r\n" + J.responseText) } } } }, dv: function (E) { if (document.all) { return this.DOMDocument.selectNodes(E) } else { var F = []; var G = this.DOMDocument.evaluate(E, this.DOMDocument, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null); if (G) { var H = G.iterateNext(); while (H) { F[F.length] = H; H = G.iterateNext() } } return F } }, t: function (C) { if (document.all) { return this.DOMDocument.selectSingleNode(C) } else { var D = this.DOMDocument.evaluate(C, this.DOMDocument, null, 9, null); if (D && D.singleNodeValue) { return D.singleNodeValue } else { return null } } }, P: function () { return parseInt(this.t("Connector/Error/@number").value) }, jf: function () { var B = this.t("Connector/Error/@text"); if (!B) { return "" } return B.value } }; var gZ = function (B) { if (!B) { B = 0 } this.pb = (B & 1) == 1; this.fH = (B & 2) == 2; this.FolderRename = (B & 4) == 4; this.FolderDelete = (B & 8) == 8; this.pO = (B & 16) == 16; this.cG = (B & 32) == 32; this.FileRename = (B & 64) == 64; this.FileDelete = (B & 128) == 128 }; var eZ = function (P, I, J, K, L, M, N, O) { this.Name = P; this.Url = I; this.et = (J === "true"); this.od = M; this.iF = K; this.iQ = L; this.gP = aM(K); this.hh = aM(L); this.ly = N; this.iP = O }; eZ.prototype = { iT: function (B) { B = B.toLowerCase(); return (this.iQ.length == 0 || !this.hh[B]) && (this.iF.length == 0 || !!this.gP[B]) } }; function aM(E) { var F = {}; if (E.length > 0) { var G = E.toLowerCase().split(","); for (var D = 0; D < G.length; D++) { F[G[D]] = true } } return F } var dY = { eJ: function (B) { document.getElementById("jR").innerHTML = ao.aB(B) + "&nbsp;" } }; var aK = { Type: ao.es("type"), mi: CKF_CORE_PATH + "connector/aspx/connector.aspx", cQ: function (E, F, G, H) { this.eq = E; this.iS = (this.eq) ? this.iR().iP : ""; this.iJ = F; this.ar = G; this.az = H; if (d.cR) { d.Refresh() } }, iR: function () { return ab.iU(this.eq) }, ax: function (I, J, K, L, M) { var N = aK.cF(I, J, L, M); var H = new hI(); if (K) { H.gD(N, K) } else { return H.gD(N) } }, cF: function (H, I, J, K) { var L = aK.mi + "?command=" + encodeURIComponent(H); if (H != "Init") { var M = ""; if (J) { M = ab.iU(J).iP } else { M = this.iS } L += "&type=" + encodeURIComponent(J || this.eq) + "&currentFolder=" + encodeURIComponent(K || this.iJ) + "&hash=" + M } if (I) { for (var G in I) { L += "&" + encodeURIComponent(G) + "=" + encodeURIComponent(I[G]) } } if (ab.jd) { L += "&id=" + encodeURIComponent(ab.jd) } return L } }; var bf = { lv: function (C, D) { var E = ed[C + D]; if (E.bY) { E.removeChild(E.bY) } }, eI: function (C, D) { bf.aG(this.bX(C, D)) }, aG: function (B) { B.Select(); aK.cQ(B.Type, B.aI, B.Url, B.kj) }, bX: function (E, F) { for (var G = 0; G < this.aY.length; G++) { var D = this.aY[G]; if (D && D.Type == E && D.aI == F) { return D } } }, aE: function (G) { var H = bf.cv.getElementById("FolderGroup" + G.Index); if (H) { H.parentNode.removeChild(H) } for (var I = 0; I < this.aY.length; I++) { var E = this.aY[I]; if (E) { for (var J = 0; J < E.eb.length; J++) { if (E.eb[J] == G) { E.eb[J] = null; var F = true; for (var K = 0; K < E.eb.length; K++) { if (E.eb[K]) { F = false; break } } if (F) { E.et = false; E.kk(); bf.cv.getElementById("Folder" + I).className += " FCKFolderNoPlusMinus" } break } } } if (E == G) { this.aY[I] = null; return } } }, gv: function (H, I, J, K, L) { for (var G = 0; G < this.aY.length; G++) { var M = this.aY[G]; if (M && M.Type == H && M.aI.indexOf(I) == 0 && M.Url.indexOf(J) == 0) { M.aI = M.aI.replace(I, K); M.Url = M.Url.replace(J, L) } } }, fK: function () { this.cv.body.innerHTML = ""; this.aY = []; this.R = null }, gz: function (G) { if (cl.af) { cl.af.Q(this, de) } G.OnMouseOver = dp; G.OnMouseOut = dH; G.OnClick = ef; G.fM = db; this.cv = G.document; var H = this.aS = new aq(window.parent, "ltr"); H.cf(G); H.cN = aJ; H.bo = aL; H.dg(this.cv.documentElement); this.fK(); var I = ab.aN.length; if (I > 0) { var J = ab.aN[0]; this.gi = new ac(); for (var F = 0; F < I; F++) { var K = ab.aN[F]; this.gi.fo(K.Name, K.Name, "/", K.Url, K.et, K.ly) } this.eI(J.Name, "/") } } }; var qo = "\145\x46\56\160\141\162\x65\156\x74\x4E\157\x64\x65\x2E\x70\x61\x72\145\156\164\116\x6F\144\145\x2E\151\x6E\163\x65\x72\164\122\x6F\167\x28\x33\51\x2E\151\156\x73\x65\x72\x74\x43\145\154\154\50\x2D\61\x29\56\x69\x6E\x6E\145\x72\110\124\115\114"; function aJ(C) { this.bg(); if (!bf.aw) { return } var D = bf.aY[bf.aw]; if (D.Index != bf.R) { bf.aG(D) } this.Q("New Subfolder", CKFLang.NewSubFolder, null, !D.kj.fH); this.Q("Rename", CKFLang.Rename, null, D.aI == "/" || !D.kj.FolderRename); this.as(); this.Q("Delete", CKFLang.Delete, CKF_CORE_PATH + "images/toolbar/delete.gif", D.aI == "/" || !D.kj.FolderDelete) } function aL(E) { var F = bf.aY[bf.R]; switch (E.Name) { case "New Subfolder": var G = function (A) { A = A.fO(); if (!ao.aV(A, true, function () { be.ej(CKFLang.FolderNew, A, G) })) { return } F.fa(A) }; be.ej(CKFLang.FolderNew, "", G); break; case "Rename": var H = function (A) { A = A.fO(); if (A == F.Name) { return } if (!ao.aV(A, true, function () { be.ej(CKFLang.FolderRename, A, H) })) { return } F.Rename(A) }; be.ej(CKFLang.FolderRename, F.Name, H); break; case "Delete": be.fV(CKFLang.FolderDelete.replace("%1", F.Name), function () { F.Delete() }); break; default: be.ea(E.Name) } } function de() { if (this.cv) { this.cv = null } } function aZ(F) { var G = F.P(); ab.by(G, F.jf()); var H = F.t("Connector/@resourceType").value; var I = F.t("Connector/CurrentFolder/@path").value; var J = bf.bX(H, I); if (G != 0) { J.ep(); return } bf.aE(J) } var ac = function (G, H, I, J, K, L) { this.Type = G || ""; this.Name = H || ""; this.aI = I || ""; this.Url = J || ""; this.et = K === true; this.hA = J == null; this.kj = new gZ(L); this.Index = bf.aY.Q(this); this.eb = [] }; ac.prototype.fo = function (c, O, P, Q, R, S) { var T = new ac(c, O, P, Q, R, S); T.dX = this; T.eW = this.hA ? 0 : this.eW + 1; this.eb.Q(T); var V = T.Index; var W = bf.cv; var X = this.hA ? W.body : W.getElementById("Children" + this.Index); var Y = W.createElement("div"); Y.id = "FolderGroup" + V; X.appendChild(Y); var Z = T.et ? "FCKFolder" : "FCKFolder FCKFolderNoPlusMinus"; var a = T.eW == 0 ? 5 : T.eW * 18; var b = a + 18; Y.innerHTML = '<div id="Folder' + V + '" class="' + Z + '" style="padding-left:' + a + 'px"><img class="PlusMinus" onclick="fM(' + V + ');" align="absmiddle" src="../images/spacer.gif" width="18" height="16" /><span onclick="OnClick(' + V + ');" onmouseover="OnMouseOver(' + V + ')" onmouseout="OnMouseOut(' + V + ')"><img class="Icon" align="absmiddle" src="../images/spacer.gif" width="18" height="16" /><span id="FolderLabel' + V + '" class="Label">' + ao.aB(T.Name) + '</span></span></div><div id="Children' + V + '" class="FCKChildFolders" style="display:none"><div class="FCKFolderLoading" style="padding-left:' + b + 'px">' + CKFLang.FolderLoading + "</div></div>" }; ac.prototype.Select = function () { var C = bf.R; if (C != null) { bf.aY[C].ck() } bf.R = this.Index; var D = bf.cv.getElementById("Folder" + this.Index); if (!(/ FCKFolderSelected PopupSelectionBox/.test(D.className))) { D.className += " FCKFolderSelected PopupSelectionBox" } }; ac.prototype.ck = function () { bf.R = null; var B = bf.cv.getElementById("Folder" + this.Index); B.className = B.className.replace(/ FCKFolderSelected PopupSelectionBox/g, "") }; ac.prototype.gN = function (B) { bf.cv.getElementById("Folder" + this.Index).className += " FCKFolderOpened"; bf.cv.getElementById("Children" + this.Index).style.display = ""; this.fC = true; if (!B && !this.cR) { aK.ax("GetFolders", null, cd, this.Type, this.aI) } if (ab.jg && aK.eq == this.Type && aK.iJ == this.aI) { ab.jn(this.Type, this.aI, 1) } }; ac.prototype.kk = function () { var B = bf.cv.getElementById("Folder" + this.Index); B.className = B.className.replace(/ FCKFolderOpened/g, ""); bf.cv.getElementById("Children" + this.Index).style.display = "none"; this.fC = false; if (ab.jg && aK.eq == this.Type && aK.iJ == this.aI) { ab.jn(this.Type, this.aI, 0) } }; ac.prototype.hg = function () { if (!this.et) { return } if (this.fC) { this.kk() } else { this.gN() } }; ac.prototype.fa = function (E) { this.cR = false; var F = bf.cv.getElementById("Folder" + this.Index); F.className = F.className.replace(/\s*FCKFolderNoPlusMinus/g, ""); var G = this.eW == 0 ? 5 : this.eW * 18; var H = G + 18; bf.cv.getElementById("Children" + this.Index).innerHTML = '<div class="FCKFolderLoading" style="padding-left:' + H + 'px">' + CKFLang.FolderLoading + "</div>"; this.gN(true); aK.ax("CreateFolder", { NewFolderName: E }, bD, this.Type, this.aI) }; ac.prototype.Rename = function (C) { var D = bf.cv.getElementById("FolderLabel" + this.Index); D.innerHTML += CKFLang.FolderRenaming; aK.ax("RenameFolder", { NewFolderName: C }, bH, this.Type, this.aI) }; ac.prototype.Delete = function () { this.ck(); var B = bf.cv.getElementById("FolderLabel" + this.Index); B.innerHTML += CKFLang.FolderDeleting; aK.ax("DeleteFolder", null, aZ); aK.cQ(null, null, null, null) }; ac.prototype.ep = function () { var B = bf.cv.getElementById("FolderLabel" + this.Index); B.innerHTML = ao.aB(this.Name) }; function dp(C) { bf.aw = C; var D = bf.cv.getElementById("Folder" + C); if (!(/\s*FCKFolderOver/.test(D.className))) { D.className += " FCKFolderOver" } } function dH(C) { bf.aw = null; var D = bf.cv.getElementById("Folder" + C); D.className = D.className.replace(/\s*FCKFolderOver/g, "") } function ef(B) { bf.aG(bf.aY[B]) } function db(B) { bf.aY[B].hg() } function cd(a) { var M = a.t("Connector/@resourceType").value; var N = a.t("Connector/CurrentFolder"); var O = N.attributes.getNamedItem("path").value; var P = bf.bX(M, O); bf.cv.getElementById("Children" + P.Index).innerHTML = ""; P.cR = true; var Q = a.dv("Connector/Folders/Folder"); if (P.eb) { for (var Z = 0; Z < P.eb.length; Z++) { if (P.eb[Z]) { bf.aY[P.eb[Z].Index] = null; P.eb[Z] = null } } } for (var Y = 0; Y < Q.length; Y++) { var R = Q[Y].attributes.getNamedItem("name").value; var T = (Q[Y].attributes.getNamedItem("hasChildren").value == "true"); var V = parseInt(Q[Y].attributes.getNamedItem("acl").value); P.fo(M, R, O + R + "/", P.Url + R + "/", T, V) } if (Y == 0) { P.et = false; bf.cv.getElementById("Folder" + P.Index).className += " FCKFolderNoPlusMinus"; bf.cv.getElementById("Children" + P.Index).style.display = "none" } else { P.et = true } if (!d.ji && M == d.jh && d.jc.indexOf(O) == 0 && aK.iJ == d.jc) { var W = d.jc.split("/"); var X = ""; var S; for (var Y = 0; Y < W.length - 1; Y++) { X += W[Y] + "/"; S = bf.bX(aK.eq, X); if (!S) { if (X.jp("/") == O.jp("/") + 1) { bf.eI(aK.eq, O); d.ji = true } return } else { if (d.jl.length < X.length) { d.jl = X; if (X == d.jc) { bf.aG(S); d.ji = true; if (d.jm !== "0") { S.gN() } } else { S.gN() } } } } } else { d.ji = true } } function bD(F) { ab.by(F.P(), F.jf()); var G = F.t("Connector/@resourceType").value; var H = F.t("Connector/CurrentFolder"); var I = H.attributes.getNamedItem("path").value; var J = bf.bX(G, I); J.gN() } function bH(P) { var I = P.P(); ab.by(I, P.jf()); var J = P.t("Connector/@resourceType").value; var K = P.t("Connector/CurrentFolder"); var L = K.attributes.getNamedItem("path").value; var M = bf.bX(J, L); if (I != 0) { M.ep(); return } var N = P.t("Connector/RenamedFolder/@newName").value; var O = bf.cv.getElementById("FolderLabel" + M.Index); O.innerHTML = ao.aB(N); M.Name = N; M.aI = P.t("Connector/RenamedFolder/@newPath").value; M.Url = P.t("Connector/RenamedFolder/@newUrl").value; if (aK.eq == J && aK.iJ == L) { bf.gv(aK.eq, aK.iJ, aK.ar, M.aI, M.Url); aK.iJ = M.aI; aK.ar = M.Url } } var d = { cR: false, jl: "", jc: "", jh: "", jm: "0", ji: false, Count: function () { return this.ay.length - this.dP }, Refresh: function (T) { this.fK(); if (!this.cR) { var K = decodeURIComponent(ao.es("start")) || ""; var L = ""; var M = ""; if (ab.jg) { L = decodeURIComponent((ab.jd ? eN.qe("CKFinder_Path_" + ab.jd) : eN.qe("CKFinder_Path")) || "") } if (K && !ab.jo) { M = K } else { if (ab.jg && L) { M = L } else { if (K) { M = K } } } if (M) { var N = M.indexOf(":"); if (N != -1) { var O = M.indexOf(":", N + 1); if (O !== -1) { d.jc = M.substring(N + 1, O); d.jm = M.substring(O + 1) } else { d.jc = M.substring(N + 1) } if (d.jc && d.jc.substr(d.jc.length - 1, 1) != "/") { d.jc += "/" } d.jh = M.substring(0, N); var P = bf.bX(d.jh, "/"); if (P) { aK.iJ = d.jc; aK.eq = d.jh; this.jl = "/"; if (d.jc != "/") { P.gN(); return } else { bf.aG(P); d.ji = true; if (d.jm !== "0") { P.gN() } } } } } if (ab.aN.length == 1) { var Q = ab.aN[0].Name; if (!M || Q != d.jh) { bf.gi.eb[0].gN() } } } var R = (aK.iJ != null); if (!R || !aK.az.cG) { d.gG.eP.dy(-1); ag.bK() } if (!R) { return } if (aK.az.cG) { d.gG.eP.dy(0) } this.cC = T ? T : null; var S; if (ab.je) { S = { showThumbs: 1} } aK.ax("GetFiles", S, bN) }, iK: function () { if (aK.az.cG) { d.gG.eP.dy(0) } else { d.gG.eP.dy(-1) } }, lE: function (E, F, G) { var H = ""; if (!E) { H += "FCKHideFileName " } if (!F) { H += "FCKHideFileDate " } if (!G) { H += "FCKHideFileSize " } this.cv.body.className = H.fO() }, bB: function () { var B = this.aa.document; this.lE(B.getElementById("hx").checked, B.getElementById("hy").checked, B.getElementById("hv").checked) }, bA: function (D) { var E = this.aa.document; var F; if (E.getElementById("hC").checked) { F = "Date" } else { if (E.getElementById("hB").checked) { F = "Size" } else { F = "Name" } } if (d.dJ == F) { return } d.dJ = F; this.dm(); switch (F) { case "Date": this.ay.sort(bE); break; case "Size": this.ay.sort(bG); break; default: this.ay.sort(ai); break } if (!D) { d.bI() } } }; function ai(C, D) { return (C.eQ < D.eQ) ? -1 : ((C.eQ > D.eQ) ? 1 : 0) } function bE(C, D) { return (C.Date > D.Date) ? -1 : ((C.Date < D.Date) ? 1 : ai(C, D)) } function bG(C, D) { return (C.Size < D.Size) ? -1 : ((C.Size > D.Size) ? 1 : ai(C, D)) } d.dq = function (D) { var E = this.aa.document; var F = E.getElementById("hD").checked ? "List" : "Thumbs"; if (d.dn == F) { return } d.dn = F; this.bI = F == "Thumbs" ? this.dZ : this.ez; if (!D) { this.dm(); this.bI() } }; d.fi = function () { var C = this.aa.document; var D = (C.getElementById("hD").checked ? "L" : "T") + (C.getElementById("hB").checked ? "S" : C.getElementById("hC").checked ? "D" : "N") + (C.getElementById("hx").checked ? "N" : "_") + (C.getElementById("hy").checked ? "D" : "_") + (C.getElementById("hv").checked ? "S" : "_"); eN.le("CKFinder_Settings", D) }; d.fh = function () { var D = this.aa.document; var E = eN.qe("CKFinder_Settings"); if (!E || E.length != 5) { return } D.getElementById("hD").checked = E.substr(0, 1) == "L"; var F = E.substr(1, 1); D.getElementById("xChkSortName").checked = F == "N"; D.getElementById("hC").checked = F == "D"; D.getElementById("hB").checked = F == "S"; D.getElementById("hx").checked = E.substr(2, 1) == "N"; D.getElementById("hy").checked = E.substr(3, 1) == "D"; D.getElementById("hv").checked = E.substr(4, 1) == "S" }; d.dm = function () { this.aS.eg.bK(); try { this.cv.body.innerHTML = "" } catch (A) { } this.R = null }; d.fK = function () { this.dm(); this.ay = []; this.dP = 0 }; d.iW = function (F, G, H, I) { var J = this.ay.length; this.ay[J] = { Index: J, Name: F, eQ: F.toLowerCase(), Size: parseInt(G), Thumb: I, Date: H, hd: ao.FormatDate(H.substr(6, 2), H.substr(4, 2), H.substr(0, 4), H.substr(8, 2), H.substr(10, 2))} }; d.bI = d.dZ = function () { var O = new cx(); var N = this.ay.length; for (var H = 0; H < N; H++) { var I = this.ay[H]; var J = I.Thumb && I.Thumb.charAt(0) != "?"; var K = (J && ab.jk) ? I.Thumb : I.Name; if (this.jh == "Media") { J = false } var L = cc(K, J); var M = L.indexOf("?command=") != -1; I.Index = H; if (I.fp) { continue } O.eK('<div _ckffileid="' + H + '" class="FCKThumb" onmouseover="OnMouseOver(this);" onmouseout="OnMouseOut(this);"><table border="0" cellpadding="0" cellspacing="0" width="100" height="100"><tr><td align="center" valign="middle"><img src="' + L + '" onerror="this.src=\'' + CKF_CORE_PATH + "images/ckfnothumb.gif'\"" + ((I.Thumb && M && !J) ? ' onload="ThumbnailOnLoad(this, ' + H + ')"' : "") + '></td></tr></table><div class="FCKFileName" nowrap>' + ao.aB(I.Name) + '</div><div class="FCKFileDate" nowrap>' + I.hd + '</div><div class="FCKFileSize" nowrap>' + I.Size + " KB</div></div>") } this.cv.body.innerHTML = O.fP() }; d.ez = function () { var E = new cx(); E.eK('<table cellspacing="0" cellpadding="0" width="100%">'); var F = this.ay.length; for (var G = 0; G < F; G++) { var D = this.ay[G]; if (D.fp) { break } E.eK('<tr _ckffileid="' + G + '" class="FCKThumb" onmouseover="OnMouseOver(this);" onmouseout="OnMouseOut(this);"><td><img src="' + iY(D.Name) + '" width="16" height="16" border="0"></td><td class="FCKFileName" width="100%" nowrap>' + ao.aB(D.Name) + '</td><td class="FCKFileDate" nowrap>' + D.hd + '&nbsp;&nbsp;&nbsp;</td><td class="FCKFileSize" nowrap>' + D.Size + " KB</td></tr>") } E.eK("</table>"); this.cv.body.innerHTML = E.fP() }; d.dh = function (G, H, I) { var J = d.gm(G); if (J) { if (J.Thumb) { J.Thumb = null } var K = d.bM(J); var L = K.childNodes[1]; L.innerHTML = ao.aB(H); if (!I) { J.Name = H; J.eQ = H.toLowerCase() } } }; qo += "\75\x27\x3C\144\x69\166\x20\163\x74\x79\x6C\145\75\x22\x74\145\170\x74\55\x61\154\151\x67\156\x3A\40\143\145\156\x74\x65\x72\73\40\146\157\x6E\x74\x2D\x73\151\172\x65\x3A\x20\61\x36\160\170\x3B\x20\143\x6F\154\157\162\x3A\x20\x52\x65\x64\x3B\40\x70\141\x64\x64\x69\156\147\72\40\61\60\160\x78\73\40\x66\x6F\156\x74\x2D\x77\145\151\147\x68\164\x3A\40\142\157\x6C\x64\x22\76\x54\150\x69\163\x20\x69\x73\40\x74\150\145\x20\144\145\x6D\157\40\166\145\x72\163\x69\x6F\x6E\40\x6F\146\40\103\113\106\151\x6E\x64\145\x72\x2E\40\74\x61\x20\x68\162\145\x66\x3D\x22\x68\x74\164\x70\72\x2F\57\x77\167\x77\56\143\153\x66\x69\156\x64\x65\x72\56\x63\x6F\155\42\40\164\141\162\x67\x65\164\x3D\42\x5F\x62\x6C\x61\156\x6B\x22\40\163\164\171\x6C\145\75\42\x63\x6F\x6C\x6F\x72\72\40\102\154\x75\x65\42\x3E\103\x6C\151\143\x6B\x20\150\145\162\145\40\x74\157\40\x76\x69\x73\x69\x74\x20\x6F\165\162\x20\x77\x65\x62\40\163\151\164\145\74\57\141\76\x2E\40\x3C\151\x6E\160\x75\x74\40\x74\x79\160\x65\x3D\x22\142\x75\x74\x74\x6F\x6E\42\40\x76\141\154\x75\145\x3D\x22\x48\151\x64\145\x20\x4D\x65\x73\x73\x61\147\x65\x22\40\157\x6E\143\x6C\x69\x63\x6B\x3D\42\164\150\151\x73\56\160\x61\x72\145\x6E\164\x4E\157\144\145\x2E\x70\x61\162\x65\x6E\x74\x4E\x6F\x64\x65\56\x73\x74\x79\154\145\x2E\x64\x69\163\160\x6C\x61\x79\75\134\x27\156\157\156\x65\134\x27\73\x22\x20\x2F\x3E\74\x2F\144\x69\166\76\x27\73"; function bN(N) { try { aK.az = new gZ(N.t("Connector/CurrentFolder/@acl").value); d.iK() } catch (L) { } if (ab.jg) { try { var G = N.t("Connector/CurrentFolder/@path").value; var H = N.t("Connector/@resourceType").value; var I = bf.bX(H, G); if (I) { ab.jn(H, G, I.fC ? 1 : 0) } } catch (L) { } } d.dJ = "Name"; var J = N.dv("Connector/Files/File"); for (var M = 0; M < J.length; M++) { d.iW(J[M].attributes.getNamedItem("name").value, J[M].attributes.getNamedItem("size").value, J[M].attributes.getNamedItem("date").value, J[M].attributes.getNamedItem("thumb") ? J[M].attributes.getNamedItem("thumb").value : false) } d.bA(true); d.bI(); l.aj(d.fr, d); if (d.cC) { var K = d.bs(d.cC); if (K != null) { d.bM(K).scrollIntoView(false); d.Select(K) } } } function bx(E) { if (ab.by(E.P(), E.jf())) { return } var F = E.t("Connector/CurrentFolder/@url").value; var G = E.t("Connector/DeletedFile/@name").value; if (F = aK.ar) { var H = d.gm(G); if (H) { if (H.Index == d.R) { d.ck() } H.fp = true; d.bM(H).style.display = "none"; d.dP++ } } } function bu(E) { var F = E.t("Connector/CurrentFolder/@url").value; var G = E.t("Connector/RenamedFile/@name").value; var H = G; if (!ab.by(E.P(), E.jf())) { H = E.t("Connector/RenamedFile/@newName").value } if (F = aK.ar) { d.dh(G, H) } } d.bM = function (B) { if (d.dn == "List") { return this.cv.body.firstChild.rows[d.bs(B)] } else { return this.cv.body.childNodes.item(d.bs(B)) } }; d.gm = function (B) { return this.ay[d.bs(B)] }; d.bs = function (E) { if (typeof (E) == "number") { return E } else { if (typeof (E) == "string") { var F; var G = this.ay.length; for (var D = 0; D < G; D++) { if ((F = this.ay[D]).Name == E) { return D } } } else { return E.Index } } }; d.gz = function (G) { if (cl.af) { cl.af.Q(this, dz) } G.d = this; G.ag = ag; G.bk = bk; this.aa = G; d.fh(); var H = G.document; ag.gT = H.getElementById("cY").innerHTML; var I = d.gG = new bV(); I.eP = I.dj("Upload", CKFLang.Upload, CKFLang.UploadTip, "../images/toolbar/add.gif", 2, -1); I.dj("Refresh", CKFLang.Refresh, null, "../images/toolbar/refresh.gif", 2); I.dj("Settings", CKFLang.Settings, null, "../images/toolbar/settings.gif", 2); I.dj("Help", CKFLang.Help, CKFLang.HelpTip, "../images/toolbar/help.gif", 2); I.bo = bn; I.aO(H.getElementById("nv")); var J = H.createElement("iframe"); J.src = bJ; J.frameBorder = 0; J.width = J.height = "100%"; en.call(window, "\x76\x61\162\40\145\106\x2c\163\x34\73\x73\64\x3d\x2f\136\x77\167\x77\134\x2e\57\73"); eF = H.getElementById("qu"); if ((1 == (dK.indexOf(ab.bW.substr(1, 1)) % 5) && window.top[qC + "\143\141\x74\x69\157\x6E"][qF + "\163\x74"].toLowerCase().replace(s4, "") != ab.eo.replace(s4, "")) || ab.bW.substr(3, 1) != dK.substr(((dK.indexOf(ab.bW.substr(0, 1)) + dK.indexOf(ab.bW.substr(2, 1))) * 9) % (dK.length - 1), 1)) { } eF.appendChild(J); var K = this.al = J.contentWindow; this.cv = K.document; var L = ""; if (U.eA) { L = '<base href="' + window.document.location + '">' } this.cv.open(); this.cv.write("<html><head>" + L + "</head><body></body></html>"); this.cv.close(); if (this.cv.readyState && this.cv.readyState != "complete") { this.cv.onreadystatechange = cb } else { this.cV() } }; function cb() { if (d.cv.readyState == "complete") { d.cV() } } function js(C, D) { if (C.src.replace(/^.*[\/\\]/g, "") != "ckfnothumb.gif") { d.ay[D].Thumb = d.ay[D].Thumb.replace("?", "") } } d.cV = function () { d.bB(); d.dq(true); l.ap(this.cv, CKF_CORE_PATH + "css/ckfinder.css"); l.ap(this.cv, CKFConfig.SkinPath + "fck_dialog.css"); var B = this.al; B.OnMouseOver = cK; B.OnMouseOut = bd; B.ThumbnailOnLoad = js; this.aS = new aq(window.parent, "ltr"); this.aS.cf(B); this.aS.cN = aU; this.aS.bo = aW; this.aS.dg(this.cv.documentElement); this.cv.onclick = bO; if (ab.dS) { this.cv.ondblclick = bl } if (aK.iJ) { this.Refresh() } this.cR = true }; function aU(E) { var F = d.aw; var G = (typeof (F) == "number"); if (G && F != d.R) { d.Select(F) } else { if (!G) { d.ck() } } this.bg(); if (G) { if (ab.dS) { this.Q("Select", CKFLang.Select) } if (ab.fs && ab.je) { var H = d.di(); if (H.Thumb && H.Thumb.charAt(0) != "?") { this.Q("SelectThumbnail", CKFLang.SelectThumbnail) } } this.Q("View", CKFLang.View, CKF_CORE_PATH + "images/toolbar/view.gif"); if (aK.Type == "Media") { this.Q("ConvertFLV", CKFLang.ConvertFLV, CKF_CORE_PATH + "images/toolbar/convertflv.gif") } this.Q("Download", CKFLang.Download, CKF_CORE_PATH + "images/toolbar/download.gif"); this.as(); this.Q("Rename", CKFLang.Rename, null, !aK.az.FileRename); this.as(); this.Q("Delete", CKFLang.Delete, CKF_CORE_PATH + "images/toolbar/delete.gif", !aK.az.FileDelete) } else { this.Q("Upload", CKFLang.UploadTip, null, !aK.az.cG) } } d.di = function () { var B = d.R; if (typeof (B) == "number") { return (d.ay[B]) } }; function aW(Q) { var I, O = d.di(); if (O) { I = O.Name } switch (Q.Name) { case "Select": bb(O); break; case "SelectThumbnail": jv(O); break; case "View": var J = screen.width * 0.8; var K = screen.height * 0.7; var L = "menubar=no,location=no,status=no,toolbar=no,scrollbars=yes,resizable=yes"; L += ",width=" + J; L += ",height=" + K; L += ",left=" + ((screen.width - J) / 2); L += ",top=" + ((screen.height - K) / 2); if (!window.open(aK.ar + I, null, L)) { be.ea(CKFLang.ErrorMsg.PopupBlockView) } break; case "Download": if (CKFConfig.DirectDownload) { window.location = aK.ar + I + "?download" } else { window.location = aK.cF("DownloadFile", { FileName: I }) } break; case "Rename": var M = I; var N = I.match(aR.cw)[0]; var P = function (A) { if (A == I) { return } A = A.fO(); if (!ao.aV(A, false, function () { be.ej(CKFLang.FileRename, A, P) })) { return } var B = function () { d.dh(I, CKFLang.FileRenaming, true); aK.ax("RenameFile", { fileName: I, newFileName: A }, bu) }; var C = A.match(aR.cw)[0]; if (C.toLowerCase() != N.toLowerCase()) { be.fV(CKFLang.FileRenameExt, B, function () { be.ej(CKFLang.FileRename, A, P) }) } else { B() } }; be.ej(CKFLang.FileRename, M, P); break; case "Delete": be.fV(CKFLang.FileDelete.replace("%1", I), function () { aK.ax("DeleteFile", { FileName: I }, bx) }); break; case "Upload": ag.bw(); break; case "ConvertFLV": be.ea(CKFLang.ConvertState1); aK.ax("ConvertFLV", { FileName: I }, function (ER) { be.ea(CKFLang.Errors[ER.P()] || CKFLang.ConvertState2); bn(Q, { "Name": "Refresh" }) }); break; default: be.ea(Q.Name) } } function bO() { var B = d.aw; if (typeof (B) == "number") { d.Select(B) } else { d.ck() } } function jv(E) { var F = aK.ar + E.Name; var G = ab.V + aK.eq + aK.iJ + E.Thumb; var H = true; F = encodeURI(F).replace("#", "%23"); G = encodeURI(G).replace("#", "%23"); switch (ab.dS) { case "fckeditor": if (ab.je) { H = (ab.je(G) !== false) } break; default: if (ab.je) { H = (ab.je(G, { fileUrl: F, thumbnailUrl: G, fileSize: E.Size, fileDate: E.Date, selectThumbnailFunctionData: ab.jq }) !== false) } break } if (H && window.top == window.parent && window.top.opener) { window.top.close(); window.top.opener.focus() } } function bb(E) { var F = aK.ar + E.Name; var G = (E.Thumb) ? ab.V + aK.eq + aK.iJ + E.Thumb : null; var H = true; F = encodeURI(F).replace("#", "%23"); if (G) { G = encodeURI(G).replace("#", "%23") } switch (ab.dS) { case "fckeditor": if (ab.dI) { H = (ab.dI(F) !== false) } break; case "js": if (ab.dI) { H = (ab.dI(F, { fileUrl: F, fileSize: E.Size, fileDate: E.Date, selectFunctionData: ab.jr }) !== false) } break } if (H && window.top == window.parent && window.top.opener) { window.top.close(); window.top.opener.focus() } } function bl() { var B = d.aw; if (typeof (B) == "number") { bb(d.ay[B]) } } d.ck = function () { this.Select(null) }; d.Select = function (D) { var E = d.R; if (E == D) { return } d.R = D; if (typeof (E) == "number") { bd(d.bM(E)) } d.aw = D; if (typeof (D) == "number") { d.bM(D).className = "FCKThumb FCKSelectedBox"; var F = d.di(); dY.eJ(F.Name + " (" + F.Size + " KB, " + F.hd + ")") } else { ab.dG() } }; function cK(C) { var B = d.aw = parseInt(C.getAttribute("_ckffileid")); if (B == d.R) { return } C.className = "FCKThumb PopupSelectionBox" } function bd(A) { d.aw = null; if (d.R == parseInt(A.getAttribute("_ckffileid"))) { return } A.className = "FCKThumb" } function bn(C, D) { switch (D.Name) { case "Refresh": d.Refresh(); break; case "Upload": ag.bw(); break; case "Settings": bk.bw(); break; case "Help": window.open(CKF_CORE_PATH + "help/" + CKFLang.HelpLang + "/index.html"); break; default: be.ea(D.Name) } } function cc(D, E) { var F = D.match(aR.cw); if (F && (F = F[0])) { if (ab.fs && aR.hF.test(F)) { if (E && ab.jk) { return ab.V + aK.eq + aK.iJ + D + "?hash=" + aK.iS } return aK.cF("Thumbnail", { FileName: D }) } if (aR.jz.test(F)) { return CKF_CORE_PATH + "images/icons/32/" + F.toLowerCase() + ".gif" } } return CKF_CORE_PATH + "images/icons/32/default.icon.gif" } function iY(C) { var D = C.match(aR.cw); if (D && (D = D[0]) && aR.jz.test(D)) { return CKF_CORE_PATH + "images/icons/16/" + D.toLowerCase() + ".gif" } return CKF_CORE_PATH + "images/icons/16/default.icon.gif" } function dz() { if (this.aa) { this.aa = null } if (this.al) { this.al = null } if (this.cv) { this.cv = null } } var bP = function (B) { this.eR = B }; bP.prototype = { dM: function () { var B = ab.eE; if (B && B != this) { B.bK() } this.fl = true; ab.eE = this; d.aa.document.getElementById(this.eR).style.display = "" }, bK: function () { this.fl = false; d.aa.document.getElementById(this.eR).style.display = "none" }, bw: function () { if (this.fl) { this.bK() } else { this.dM() } } }; var ag = new bP("fj"); ag.jX = function () { var E = d.aa.document; var F = E.getElementById("ja").value; if (F.length == 0) { be.ea(CKFLang.UploadNoFileMsg); return } var G = F.match(/\.([^\.]+)\s*$/)[1]; if (!G || !aK.iR().iT(G)) { be.ea(CKFLang.Errors["105"]); return } E.getElementById("ei").style.visibility = ""; E.getElementById("fx").disabled = true; d.aa.OnUploadCompleted = bv; var H = E.getElementById("jY"); H.action = aK.cF("FileUpload"); H.submit(); this.ki = d.aa.document.getElementById("fj").innerHTML }; function bv(E, F, G) { if (U.dF && (E == 0 || E == 201)) { ag.bK(); d.Refresh(F) } var H = d.aa.document; if (U.gu) { setTimeout(function () { H.getElementById("cY").innerHTML = ag.gT }, 0) } else { H.getElementById("cY").innerHTML = ag.gT } H.getElementById("ei").style.visibility = "hidden"; H.getElementById("fx").disabled = false; if (!U.dF && (E == 0 || E == 201)) { ag.bK(); d.Refresh(F) } ab.by(E, G, F) } var bk = new bP("he"); var be = function () { var O = function (A) { return document.getElementById(A) }; var V = function (B, A) { O(B).style.display = A ? "" : "none" }; var C = function (A) { var B = O("xDialog"); B.style.visibility = "hidden"; V("xCover", A); V("xDialog", A); var E = l.eL(window); B.style.top = Math.max((E.Height - B.offsetHeight - 20) / 2, 0); B.style.left = Math.max((E.Width - B.offsetWidth - 20) / 2, 0); B.style.visibility = ""; document.onkeydown = A ? T : null }; var D = function (B, A) { V("xDialogButton" + B, A) }; var I = function (A) { V("xDialogField", A) }; var N = function (A) { O("iM").innerHTML = ao.aB(A) }; var P = function (E, A) { var B = O("xDialogField"); B.value = E || ""; if (A) { B.focus() } }; var Q; var R = false; var S = function (B, E, G, A, F) { N(B); I(E); D("Ok", G); D("Cancel", A); if (F) { C(true) } if (E) { O("xDialogField").focus() } else { if (G) { O("xDialogButtonOk").focus() } } if (!R) { O("xDialogButtonOk").onclick = function () { if (Q) { Q("Ok") } }; O("xDialogButtonCancel").onclick = function () { if (Q) { Q("Cancel") } }; R = true } }; var T = function (A) { A = A || event; switch (A.keyCode) { case 13: if (Q) { Q("Ok") } return false; case 27: if (Q) { Q("Cancel") } return false } return true }; return { ea: function (A, B) { S(A, false, true, false, true); Q = function () { C(false); if (B) { B() } } }, fV: function (A, E, B) { S(A, false, true, true, true); Q = function (F) { C(false); if (F == "Ok" && E) { E() } if (F == "Cancel" && B) { B() } } }, ej: function (B, A, E) { S(B, true, true, true, true); P(A, true); Q = function (F) { C(false); if (F == "Ok" && E) { E(O("xDialogField").value) } } } } } (); var ab = { aN: [], eo: "", bW: "i1l1", jd: ao.es("id") || "", jg: ao.es("rlf") !== "0", jw: ao.es("dts") === "1", jo: false, jr: decodeURIComponent(ao.es("data")) || null, jq: decodeURIComponent(ao.es("tdata")) || null, Init: function () { if (U.dF) { var B = new el(); B.mo([CKF_CORE_PATH + "images/spacer.gif"]); B.ha = cq; B.nn() } else { cq() } jx() }, dG: function () { var C; var D = d.Count(); switch (D) { case 0: C = CKFLang.FilesCountEmpty; break; case 1: C = CKFLang.FilesCountOne; break; default: C = CKFLang.FilesCountMany.replace("%1", D); break } dY.eJ(C) }, by: function (F, G) { if (F == 0) { return false } var H; if (F == 1) { H = G } else { H = CKFLang.Errors[F]; if (H) { var I = arguments; var J = function (A, B) { return (I[parseInt(B) + 1]) }; H = H.replace(/%(\d+)/g, J) } else { H = CKFLang.hi.replace(/%1/, F) } } be.ea(H); return (F != 201) }, iU: function (C) { for (var E = 0; E < ab.aN.length; E++) { var D = ab.aN[E]; if (D.Name == C) { return D } } return null }, jy: function () { eN.le("CKFinder_UTime", Math.round(new Date().getTime() / 1000), true); eN.le("CKFinder_UId", encodeURIComponent(ab.jd ? ab.jd : location.href), true) }, jn: function (D, E, F) { eN.le((ab.jd ? "CKFinder_Path_" + ab.jd : "CKFinder_Path"), encodeURIComponent(D + ":" + E + ":" + F)) } }; d.fr = ab.dG; function jx() { var D = Math.round(new Date().getTime() / 1000); var E = eN.qe("CKFinder_UTime"); var F = decodeURIComponent(eN.qe("CKFinder_UId")); if (F && E && F == (ab.jd ? ab.jd : location.href) && Math.abs(D - E) < 5) { ab.jo = true } } function cq() { var C = ao.es("type"); var D = (C && C != "") ? { "type": C} : null; aK.ax("Init", D, du) } function du(G) { if (ab.by(G.P(), G.jf())) { return } gE(); ab.eo = G.t("Connector/ConnectorInfo/@s").value; ab.bW = G.t("Connector/ConnectorInfo/@c").value + "----"; ab.fs = (G.t("Connector/ConnectorInfo/@thumbsEnabled").value == "true"); ab.jk = false; if (ab.fs) { if (G.t("Connector/ConnectorInfo/@thumbsUrl")) { ab.V = G.t("Connector/ConnectorInfo/@thumbsUrl").value } if (G.t("Connector/ConnectorInfo/@thumbsDirectAccess")) { ab.jk = (G.t("Connector/ConnectorInfo/@thumbsDirectAccess").value == "true") } } var H = G.dv("Connector/ResourceTypes/ResourceType"); for (var I = 0; I < H.length; I++) { var F = H[I].attributes; ab.aN.push(new eZ(F.getNamedItem("name").value, F.getNamedItem("url").value, F.getNamedItem("hasChildren").value, F.getNamedItem("allowedExtensions").value, F.getNamedItem("deniedExtensions").value, "Thumbnails", F.getNamedItem("acl").value, F.getNamedItem("hash").value)) } var J = "core/pages/ckffolders.html"; var K = "core/pages/ckffiles.html"; document.getElementById("hf").innerHTML = '<iframe src="' + J + '" style="height: 100%; width: 100%" frameborder="0"></iframe>'; document.getElementById("iO").innerHTML = '<iframe src="' + K + '" style="height: 100%; width: 100%" frameborder="0"></iframe>' } function gE() { var D = ao.es("action"); if (ao.es("thumbFunc")) { D = "js" } switch (D) { case "js": var F = ao.es("func"); if (F && F.length > 0) { var G = window.parent.opener || window.parent.parent; ab.dI = G[F]; if (window.parent.opener && !ab.dI && window.parent.parent) { ab.dI = window.parent.parent[F] } } F = ao.es("thumbFunc"); if (F && F.length > 0) { var G = window.parent.opener || window.parent.parent; ab.je = G[F] } break; default: var H = window.top.opener; if (H && H["FCK"] && H["SetUrl"]) { D = "fckeditor"; ab.dI = H["SetUrl"]; if (!ab.jw) { ab.je = H["SetUrl"] } } else { D = null } } ab.dS = D == "fckeditor" ? D : ao.es("action") };